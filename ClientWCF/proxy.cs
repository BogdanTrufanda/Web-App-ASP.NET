//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="Interface1")]
public interface Interface1
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/Add", ReplyAction="http://tempuri.org/Interface1/AddResponse")]
    void Add(string a, string b, string c, string d, string e, string f, string g);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/Add", ReplyAction="http://tempuri.org/Interface1/AddResponse")]
    System.Threading.Tasks.Task AddAsync(string a, string b, string c, string d, string e, string f, string g);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/Remove", ReplyAction="http://tempuri.org/Interface1/RemoveResponse")]
    void Remove(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/Remove", ReplyAction="http://tempuri.org/Interface1/RemoveResponse")]
    System.Threading.Tasks.Task RemoveAsync(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/Update", ReplyAction="http://tempuri.org/Interface1/UpdateResponse")]
    void Update(string a, string b, string c);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/Update", ReplyAction="http://tempuri.org/Interface1/UpdateResponse")]
    System.Threading.Tasks.Task UpdateAsync(string a, string b, string c);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/GetColumnNames", ReplyAction="http://tempuri.org/Interface1/GetColumnNamesResponse")]
    List<string> GetColumnNames();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/GetColumnNames", ReplyAction="http://tempuri.org/Interface1/GetColumnNamesResponse")]
    System.Threading.Tasks.Task<List<string>> GetColumnNamesAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/GetPaths", ReplyAction="http://tempuri.org/Interface1/GetPathsResponse")]
    List<string> GetPaths();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/GetPaths", ReplyAction="http://tempuri.org/Interface1/GetPathsResponse")]
    System.Threading.Tasks.Task<List<string>> GetPathsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/GetAll", ReplyAction="http://tempuri.org/Interface1/GetAllResponse")]
    List<string> GetAll();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/GetAll", ReplyAction="http://tempuri.org/Interface1/GetAllResponse")]
    System.Threading.Tasks.Task<List<string>> GetAllAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/Get", ReplyAction="http://tempuri.org/Interface1/GetResponse")]
    List<string>  Get(string a);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Interface1/Get", ReplyAction="http://tempuri.org/Interface1/GetResponse")]
    System.Threading.Tasks.Task<List<string>> GetAsync(string a);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface Interface1Channel : Interface1, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class Interface1Client : System.ServiceModel.ClientBase<Interface1>, Interface1
{
    
    public Interface1Client()
    {
    }
    
    public Interface1Client(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public Interface1Client(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Interface1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Interface1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void Add(string a, string b, string c, string d, string e, string f, string g)
    {
        base.Channel.Add(a, b, c, d, e, f, g);
    }
    
    public System.Threading.Tasks.Task AddAsync(string a, string b, string c, string d, string e, string f, string g)
    {
        return base.Channel.AddAsync(a, b, c, d, e, f, g);
    }
    
    public void Remove(string path)
    {
        base.Channel.Remove(path);
    }
    
    public System.Threading.Tasks.Task RemoveAsync(string path)
    {
        return base.Channel.RemoveAsync(path);
    }
    
    public void Update(string a, string b, string c)
    {
        base.Channel.Update(a, b, c);
    }
    
    public System.Threading.Tasks.Task UpdateAsync(string a, string b, string c)
    {
        return base.Channel.UpdateAsync(a, b, c);
    }
    
    public List<string> GetColumnNames()
    {
        return base.Channel.GetColumnNames();
    }
    
    public System.Threading.Tasks.Task<List<string>> GetColumnNamesAsync()
    {
        return base.Channel.GetColumnNamesAsync();
    }
    
    public List<string> GetPaths()
    {
        return base.Channel.GetPaths();
    }
    
    public System.Threading.Tasks.Task<List<string>> GetPathsAsync()
    {
        return base.Channel.GetPathsAsync();
    }
    
    public List<string> GetAll()
    {
        return base.Channel.GetAll();
    }
    
    public System.Threading.Tasks.Task<List<string>> GetAllAsync()
    {
        return base.Channel.GetAllAsync();
    }
    
    public List<string> Get(string a)
    {
        return base.Channel.Get(a);
    }
    
    public System.Threading.Tasks.Task<List<string>> GetAsync(string a)
    {
        return base.Channel.GetAsync(a);
    }
}
